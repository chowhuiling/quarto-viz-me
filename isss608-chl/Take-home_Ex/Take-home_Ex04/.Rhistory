origin = "midpoint",
horizonscale = 6)+
facet_grid(`Station`~.) +
theme_few() +
scale_fill_hcl(palette = 'RdBu') +
theme(panel.spacing.y=unit(0, "lines"), strip.text.y = element_text(
size = 5, angle = 0, hjust = 0),
legend.position = 'none',
axis.text.y = element_blank(),
axis.text.x = element_text(size=7),
axis.title.y = element_blank(),
axis.title.x = element_blank(),
axis.ticks.y = element_blank(),
panel.border = element_blank()
) +
scale_x_date(expand=c(0,0), date_breaks = "3 year", date_labels = "%b%y") +
ggtitle('Average Temperature Selected Stations (Jan 2018 to Dec 2022)')
}
weather_data
generate_horizon_plot(weather_data,`DMean Temperature`)
#| fig-height: 12
#| fig-width: 10
generate_horizon_plot <- function(df, field) {
df %>%
filter(Date >= "2020-01-01") %>%
filter(!is.na(field)) %>%
ggplot() +
geom_horizon(aes(x = Date, y=field),
origin = "midpoint",
horizonscale = 6)+
facet_grid(`Station`~.) +
theme_few() +
scale_fill_hcl(palette = 'RdBu') +
theme(panel.spacing.y=unit(0, "lines"), strip.text.y = element_text(
size = 5, angle = 0, hjust = 0),
legend.position = 'none',
axis.text.y = element_blank(),
axis.text.x = element_text(size=7),
axis.title.y = element_blank(),
axis.title.x = element_blank(),
axis.ticks.y = element_blank(),
panel.border = element_blank()
) +
scale_x_date(expand=c(0,0), date_breaks = "3 year", date_labels = "%b%y") +
ggtitle('Average Temperature Selected Stations (Jan 2018 to Dec 2022)')
}
weather_data
generate_horizon_plot(weather_data,`Mean Temperature`)
#| fig-height: 12
#| fig-width: 10
generate_horizon_plot <- function(df, field) {
df %>%
filter(Date >= "2020-01-01") %>%
filter(!is.na(field)) %>%
ggplot() +
geom_horizon(aes(x = Date, y=field),
origin = "midpoint",
horizonscale = 6)+
facet_grid(`Station`~.) +
theme_few() +
scale_fill_hcl(palette = 'RdBu') +
theme(panel.spacing.y=unit(0, "lines"), strip.text.y = element_text(
size = 5, angle = 0, hjust = 0),
legend.position = 'none',
axis.text.y = element_blank(),
axis.text.x = element_text(size=7),
axis.title.y = element_blank(),
axis.title.x = element_blank(),
axis.ticks.y = element_blank(),
panel.border = element_blank()
) +
scale_x_date(expand=c(0,0), date_breaks = "3 year", date_labels = "%b%y") +
ggtitle('Average Temperature Selected Stations (Jan 2018 to Dec 2022)')
}
weather_data
generate_horizon_plot(weather_data,wather_Data$`Mean Temperature`)
#| fig-height: 12
#| fig-width: 10
generate_horizon_plot <- function(df, field) {
df %>%
filter(Date >= "2020-01-01") %>%
filter(!is.na(field)) %>%
ggplot() +
geom_horizon(aes(x = Date, y=field),
origin = "midpoint",
horizonscale = 6)+
facet_grid(`Station`~.) +
theme_few() +
scale_fill_hcl(palette = 'RdBu') +
theme(panel.spacing.y=unit(0, "lines"), strip.text.y = element_text(
size = 5, angle = 0, hjust = 0),
legend.position = 'none',
axis.text.y = element_blank(),
axis.text.x = element_text(size=7),
axis.title.y = element_blank(),
axis.title.x = element_blank(),
axis.ticks.y = element_blank(),
panel.border = element_blank()
) +
scale_x_date(expand=c(0,0), date_breaks = "3 year", date_labels = "%b%y") +
ggtitle('Average Temperature Selected Stations (Jan 2018 to Dec 2022)')
}
weather_data
generate_horizon_plot(weather_data,weather_Data$`Mean Temperature`)
#| fig-height: 12
#| fig-width: 10
generate_horizon_plot <- function(df, field) {
df %>%
filter(Date >= "2020-01-01") %>%
filter(!is.na(field)) %>%
ggplot() +
geom_horizon(aes(x = Date, y=field),
origin = "midpoint",
horizonscale = 6)+
facet_grid(`Station`~.) +
theme_few() +
scale_fill_hcl(palette = 'RdBu') +
theme(panel.spacing.y=unit(0, "lines"), strip.text.y = element_text(
size = 5, angle = 0, hjust = 0),
legend.position = 'none',
axis.text.y = element_blank(),
axis.text.x = element_text(size=7),
axis.title.y = element_blank(),
axis.title.x = element_blank(),
axis.ticks.y = element_blank(),
panel.border = element_blank()
) +
scale_x_date(expand=c(0,0), date_breaks = "3 year", date_labels = "%b%y") +
ggtitle('Average Temperature Selected Stations (Jan 2018 to Dec 2022)')
}
weather_data
generate_horizon_plot(weather_data,"Mean Temperature")
#| fig-height: 12
#| fig-width: 10
generate_horizon_plot <- function(df, field) {
df %>%
filter(Date >= "2020-01-01") %>%
filter(!is.na(field)) %>%
df
ggplot() +
geom_horizon(aes(x = Date, y=field),
origin = "midpoint",
horizonscale = 6)+
facet_grid(`Station`~.) +
theme_few() +
scale_fill_hcl(palette = 'RdBu') +
theme(panel.spacing.y=unit(0, "lines"), strip.text.y = element_text(
size = 5, angle = 0, hjust = 0),
legend.position = 'none',
axis.text.y = element_blank(),
axis.text.x = element_text(size=7),
axis.title.y = element_blank(),
axis.title.x = element_blank(),
axis.ticks.y = element_blank(),
panel.border = element_blank()
) +
scale_x_date(expand=c(0,0), date_breaks = "3 year", date_labels = "%b%y") +
ggtitle('Average Temperature Selected Stations (Jan 2018 to Dec 2022)')
}
generate_horizon_plot(weather_data,"Mean Temperature")
#| fig-height: 12
#| fig-width: 10
generate_horizon_plot <- function(df, field) {
df %>%
filter(Date >= "2020-01-01") %>%
filter(!is.na(field)) #%>%
df
ggplot() +
geom_horizon(aes(x = Date, y=field),
origin = "midpoint",
horizonscale = 6)+
facet_grid(`Station`~.) +
theme_few() +
scale_fill_hcl(palette = 'RdBu') +
theme(panel.spacing.y=unit(0, "lines"), strip.text.y = element_text(
size = 5, angle = 0, hjust = 0),
legend.position = 'none',
axis.text.y = element_blank(),
axis.text.x = element_text(size=7),
axis.title.y = element_blank(),
axis.title.x = element_blank(),
axis.ticks.y = element_blank(),
panel.border = element_blank()
) +
scale_x_date(expand=c(0,0), date_breaks = "3 year", date_labels = "%b%y") +
ggtitle('Average Temperature Selected Stations (Jan 2018 to Dec 2022)')
}
generate_horizon_plot(df=weather_data,"Mean Temperature")
#| fig-height: 12
#| fig-width: 10
generate_horizon_plot <- function(df, field) {
df %>%
filter(Date >= "2020-01-01") %>%
filter(!is.na(field)) #%>%
df
# ggplot() +
# geom_horizon(aes(x = Date, y=field),
#              origin = "midpoint",
#              horizonscale = 6)+
# facet_grid(`Station`~.) +
#   theme_few() +
# scale_fill_hcl(palette = 'RdBu') +
# theme(panel.spacing.y=unit(0, "lines"), strip.text.y = element_text(
#   size = 5, angle = 0, hjust = 0),
#   legend.position = 'none',
#   axis.text.y = element_blank(),
#   axis.text.x = element_text(size=7),
#   axis.title.y = element_blank(),
#   axis.title.x = element_blank(),
#   axis.ticks.y = element_blank(),
#   panel.border = element_blank()
#   ) +
#   scale_x_date(expand=c(0,0), date_breaks = "3 year", date_labels = "%b%y") +
# ggtitle('Average Temperature Selected Stations (Jan 2018 to Dec 2022)')
}
generate_horizon_plot(df=weather_data,"Mean Temperature")
#| fig-height: 12
#| fig-width: 10
generate_horizon_plot <- function(df, field) {
d<-  df %>%
filter(Date >= "2020-01-01") %>%
filter(!is.na(field)) #%>%
d
# ggplot() +
# geom_horizon(aes(x = Date, y=field),
#              origin = "midpoint",
#              horizonscale = 6)+
# facet_grid(`Station`~.) +
#   theme_few() +
# scale_fill_hcl(palette = 'RdBu') +
# theme(panel.spacing.y=unit(0, "lines"), strip.text.y = element_text(
#   size = 5, angle = 0, hjust = 0),
#   legend.position = 'none',
#   axis.text.y = element_blank(),
#   axis.text.x = element_text(size=7),
#   axis.title.y = element_blank(),
#   axis.title.x = element_blank(),
#   axis.ticks.y = element_blank(),
#   panel.border = element_blank()
#   ) +
#   scale_x_date(expand=c(0,0), date_breaks = "3 year", date_labels = "%b%y") +
# ggtitle('Average Temperature Selected Stations (Jan 2018 to Dec 2022)')
}
generate_horizon_plot(df=weather_data,"Mean Temperature")
#| fig-height: 12
#| fig-width: 10
generate_horizon_plot <- function(df, field) {
df %>%
filter(Date >= "2020-01-01") %>%
filter(!is.na(field)) %>%
ggplot() +
geom_horizon(aes(x = Date, y=field),
origin = "midpoint",
horizonscale = 6)+
facet_grid(`Station`~.) +
theme_few() +
scale_fill_hcl(palette = 'RdBu') +
theme(panel.spacing.y=unit(0, "lines"), strip.text.y = element_text(
size = 5, angle = 0, hjust = 0),
legend.position = 'none',
axis.text.y = element_blank(),
axis.text.x = element_text(size=7),
#   axis.title.y = element_blank(),
#   axis.title.x = element_blank(),
#   axis.ticks.y = element_blank(),
#   panel.border = element_blank()
) +
scale_x_date(expand=c(0,0), date_breaks = "3 year", date_labels = "%b%y") +
ggtitle('Average Temperature Selected Stations (Jan 2018 to Dec 2022)')
}
generate_horizon_plot(df=weather_data,"Mean Temperature")
#| fig-height: 12
#| fig-width: 10
generate_horizon_plot <- function(df, field) {
df %>%
filter(Date >= "2020-01-01") %>%
filter(!is.na(field)) %>%
ggplot() +
geom_horizon(aes(x = Date, y=field),
origin = "midpoint",
horizonscale = 6)+
facet_grid(`Station`~.) +
theme_few() +
scale_fill_hcl(palette = 'RdBu') +
theme(panel.spacing.y=unit(0, "lines"), strip.text.y = element_text(
size = 5, angle = 0, hjust = 0),
legend.position = 'none',
axis.text.y = element_blank(),
axis.text.x = element_text(size=7),
axis.title.y = element_blank(),
axis.title.x = element_blank(),
axis.ticks.y = element_blank(),
panel.border = element_blank()
) +
scale_x_date(expand=c(0,0), date_breaks = "3 year", date_labels = "%b%y") +
ggtitle('Average Temperature Selected Stations (Jan 2018 to Dec 2022)')
}
generate_horizon_plot(df=weather_data,"Mean Temperature")
#| fig-height: 12
#| fig-width: 10
generate_horizon_plot <- function(df, field) {
df %>%
filter(Date >= "2020-01-01") %>%
filter(!is.na(field)) %>%
ggplot() +
geom_horizon(aes(x = Date, y=`field`),
origin = "midpoint",
horizonscale = 6)+
facet_grid(`Station`~.) +
theme_few() +
scale_fill_hcl(palette = 'RdBu') +
theme(panel.spacing.y=unit(0, "lines"), strip.text.y = element_text(
size = 5, angle = 0, hjust = 0),
legend.position = 'none',
axis.text.y = element_blank(),
axis.text.x = element_text(size=7),
axis.title.y = element_blank(),
axis.title.x = element_blank(),
axis.ticks.y = element_blank(),
panel.border = element_blank()
) +
scale_x_date(expand=c(0,0), date_breaks = "3 year", date_labels = "%b%y") +
ggtitle('Average Temperature Selected Stations (Jan 2018 to Dec 2022)')
}
generate_horizon_plot(df=weather_data,"Mean Temperature")
#| fig-height: 12
#| fig-width: 10
generate_horizon_plot <- function(df, field) {
df %>%
filter(Date >= "2020-01-01") %>%
filter(!is.na(field)) %>%
ggplot() +
geom_horizon(aes(x = Date, y=`Mean Temperature`),
origin = "midpoint",
horizonscale = 6)+
facet_grid(`Station`~.) +
theme_few() +
scale_fill_hcl(palette = 'RdBu') +
theme(panel.spacing.y=unit(0, "lines"), strip.text.y = element_text(
size = 5, angle = 0, hjust = 0),
legend.position = 'none',
axis.text.y = element_blank(),
axis.text.x = element_text(size=7),
axis.title.y = element_blank(),
axis.title.x = element_blank(),
axis.ticks.y = element_blank(),
panel.border = element_blank()
) +
scale_x_date(expand=c(0,0), date_breaks = "3 year", date_labels = "%b%y") +
ggtitle('Average Temperature Selected Stations (Jan 2018 to Dec 2022)')
}
generate_horizon_plot(df=weather_data,"Mean Temperature")
#| fig-height: 12
#| fig-width: 10
generate_horizon_plot <- function(df, field) {
df %>%
filter(Date >= "2020-01-01") %>%
filter(!is.na(field)) %>%
ggplot() +
geom_horizon(aes(x = Date, y=field),
origin = "midpoint",
horizonscale = 6)+
facet_grid(`Station`~.) +
theme_few() +
scale_fill_hcl(palette = 'RdBu') +
theme(panel.spacing.y=unit(0, "lines"), strip.text.y = element_text(
size = 5, angle = 0, hjust = 0),
legend.position = 'none',
axis.text.y = element_blank(),
axis.text.x = element_text(size=7),
axis.title.y = element_blank(),
axis.title.x = element_blank(),
axis.ticks.y = element_blank(),
panel.border = element_blank()
) +
scale_x_date(expand=c(0,0), date_breaks = "3 year", date_labels = "%b%y") +
ggtitle('Average Temperature Selected Stations (Jan 2018 to Dec 2022)')
}
generate_horizon_plot(df=weather_data,`Mean Temperature`)
#| fig-height: 12
#| fig-width: 10
generate_horizon_plot <- function(df, field) {
df %>%
filter(Date >= "2020-01-01") %>%
filter(!is.na(field)) %>%
ggplot() +
geom_horizon(aes(x = Date, y="Mean Temperature"),
origin = "midpoint",
horizonscale = 6)+
facet_grid(`Station`~.) +
theme_few() +
scale_fill_hcl(palette = 'RdBu') +
theme(panel.spacing.y=unit(0, "lines"), strip.text.y = element_text(
size = 5, angle = 0, hjust = 0),
legend.position = 'none',
axis.text.y = element_blank(),
axis.text.x = element_text(size=7),
axis.title.y = element_blank(),
axis.title.x = element_blank(),
axis.ticks.y = element_blank(),
panel.border = element_blank()
) +
scale_x_date(expand=c(0,0), date_breaks = "3 year", date_labels = "%b%y") +
ggtitle('Average Temperature Selected Stations (Jan 2018 to Dec 2022)')
}
generate_horizon_plot(df=weather_data,"Mean Temperature")
#| fig-height: 12
#| fig-width: 10
generate_horizon_plot <- function(df, field) {
df %>%
filter(Date >= "2020-01-01") %>%
filter(!is.na(field)) %>%
ggplot() +
geom_horizon(aes(x = Date, y=df$"Mean Temperature"),
origin = "midpoint",
horizonscale = 6)+
facet_grid(`Station`~.) +
theme_few() +
scale_fill_hcl(palette = 'RdBu') +
theme(panel.spacing.y=unit(0, "lines"), strip.text.y = element_text(
size = 5, angle = 0, hjust = 0),
legend.position = 'none',
axis.text.y = element_blank(),
axis.text.x = element_text(size=7),
axis.title.y = element_blank(),
axis.title.x = element_blank(),
axis.ticks.y = element_blank(),
panel.border = element_blank()
) +
scale_x_date(expand=c(0,0), date_breaks = "3 year", date_labels = "%b%y") +
ggtitle('Average Temperature Selected Stations (Jan 2018 to Dec 2022)')
}
generate_horizon_plot(df=weather_data,"Mean Temperature")
#| fig-height: 12
#| fig-width: 10
generate_horizon_plot <- function(df, field) {
df %>%
filter(Date >= "2020-01-01") %>%
filter(!is.na(field)) %>%
ggplot() +
geom_horizon(aes(x = Date, y="Mean Temperature"),
origin = "midpoint",
horizonscale = 6)+
facet_grid(`Station`~.) +
theme_few() +
scale_fill_hcl(palette = 'RdBu') +
theme(panel.spacing.y=unit(0, "lines"), strip.text.y = element_text(
size = 5, angle = 0, hjust = 0),
legend.position = 'none',
axis.text.y = element_blank(),
axis.text.x = element_text(size=7),
axis.title.y = element_blank(),
axis.title.x = element_blank(),
axis.ticks.y = element_blank(),
panel.border = element_blank()
) +
scale_x_date(expand=c(0,0), date_breaks = "3 year", date_labels = "%b%y") +
ggtitle('Average Temperature Selected Stations (Jan 2018 to Dec 2022)')
}
generate_horizon_plot(df=weather_data,"Mean Temperature")
#| fig-height: 12
#| fig-width: 10
generate_horizon_plot <- function(df, field) {
df %>%
filter(Date >= "2020-01-01") %>%
filter(!is.na(field)) %>%
ggplot() +
geom_horizon(aes(x = Date, y=`Mean Temperature`),
origin = "midpoint",
horizonscale = 6)+
facet_grid(`Station`~.) +
theme_few() +
scale_fill_hcl(palette = 'RdBu') +
theme(panel.spacing.y=unit(0, "lines"), strip.text.y = element_text(
size = 5, angle = 0, hjust = 0),
legend.position = 'none',
axis.text.y = element_blank(),
axis.text.x = element_text(size=7),
axis.title.y = element_blank(),
axis.title.x = element_blank(),
axis.ticks.y = element_blank(),
panel.border = element_blank()
) +
scale_x_date(expand=c(0,0), date_breaks = "3 year", date_labels = "%b%y") +
ggtitle('Average Temperature Selected Stations (Jan 2018 to Dec 2022)')
}
generate_horizon_plot(df=weather_data,"Mean Temperature")
library(ggplot2)
library(dplyr)
library(tidyr)
df <- weather_data
# Reshape data from wide to long format
melted_df <- df %>%
pivot_longer(cols = c(`Total Daily Rainfall`, `Mean Temperature`), names_to = "variable", values_to = "value")
# Calculate quartiles for each variable
quartiles <- melted_df %>%
group_by(variable) %>%
summarise(Q1 = quantile(value, 0.25, na.rm = TRUE),
Q3 = quantile(value, 0.75, na.rm = TRUE))
# Create the horizon plot
horizon_plot <- ggplot(melted_df, aes(x = Date, y = value)) +
geom_area(aes(fill = variable), position = "identity", alpha = 0.7) +
geom_hline(data = quartiles, aes(yintercept = Q1, color = variable), linetype = "dashed", size = 0.5) +
geom_hline(data = quartiles, aes(yintercept = Q3, color = variable), linetype = "dashed", size = 0.5) +
scale_fill_manual(values = c("red", "blue")) +
scale_color_manual(values = c("red", "blue")) +
labs(x = "Date", y = "Value", fill = NULL, color = NULL, title = "Horizon Plot of Rainfall and Temperature") +
theme_minimal()
# Show the plot
print(horizon_plot)
shiny::runApp('~/Desktop/SMU/ISSS608-Visual_Analytics/project/isss608-group4/shinyApp')
runApp('~/Desktop/SMU/ISSS608-Visual_Analytics/project/isss608-group4/shinyApp')
