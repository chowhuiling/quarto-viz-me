{
  "hash": "3c0273d6233546ce34738f2571cdc821",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Horizon Plot\"\nauthor: \"Chow Hui Ling\"\n\ndate: \"24 Feb 2024\"\ndate-modified: last-modified\ndate-format: \"DD MMM YYYY\"\n\nformat: html\nexecute: \n  echo: true\n  eval: true\n  warning: false\n  message: false\n  freeze: true\n---\n\n\n# Getting started\n\nIn this section, you will learn how to plot a [horizon graph](http://www.perceptualedge.com/articles/visual_business_intelligence/time_on_the_horizon.pdf) by using [**ggHoriPlot**](https://rivasiker.github.io/ggHoriPlot/index.html) package.\n\n::: callout-tip\nBefore getting started, please visit [Getting Started](https://rivasiker.github.io/ggHoriPlot/articles/ggHoriPlot.html) to learn more about the functions of ggHoriPlot package. Next, read [`geom_horizon()`](https://rivasiker.github.io/ggHoriPlot/reference/geom_horizon.html) to learn more about the usage of its arguments.\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\npacman::p_load(ggHoriPlot, ggthemes, tidyverse)\n```\n:::\n\n\n\n### Step 1: Data Import\n\nFor the purpose of this hands-on exercise, [Average Retail Prices Of Selected Consumer Items](https://tablebuilder.singstat.gov.sg/table/TS/M212891) will be used.\n\nUse the code chunk below to import the AVERP.csv file into R environment.\n\n\n::: {.cell}\n\n```{.r .cell-code}\naverp <- read_csv(\"data/AVERP.csv\") %>%\n  mutate(`Date` = dmy(`Date`))\n\nspec(averp)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nNULL\n```\n\n\n:::\n:::\n\n\n::: callout-tip\n# Thing to learn from the code chunk above.\n\n-   By default, read_csv will import data in Date field as Character data type. [`dmy()`](https://lubridate.tidyverse.org/reference/ymd.html) of [**lubridate**](https://lubridate.tidyverse.org/index.html) package to palse the Date field into appropriate Date data type in R.\n:::\n\n\n::: {.cell}\n\n:::\n\n\n### Step 2: Plotting the horizon graph\n\nNext, the code chunk below will be used to plot the horizon graph.\nTake note that we added `#| fig-width: 12` and `#| fig-width: 10` to control the size of the figure\n\n\n::: {.cell}\n\n```{.r .cell-code}\naverp %>% \n  filter(Date >= \"2018-01-01\") %>%\n  ggplot() +\n  geom_horizon(aes(x = Date, y=Values), \n               origin = \"midpoint\", \n               horizonscale = 6)+\n  facet_grid(`Consumer Items`~.) +\n    theme_few() +\n  scale_fill_hcl(palette = 'RdBu') +\n  theme(panel.spacing.y=unit(0, \"lines\"), strip.text.y = element_text(\n    size = 5, angle = 0, hjust = 0),\n    legend.position = 'none',\n    axis.text.y = element_blank(),\n    axis.text.x = element_text(size=7),\n    axis.title.y = element_blank(),\n    axis.title.x = element_blank(),\n    axis.ticks.y = element_blank(),\n    panel.border = element_blank()\n    ) +\n    scale_x_date(expand=c(0,0), date_breaks = \"3 month\", date_labels = \"%b%y\") +\n  ggtitle('Average Retail Prices of Selected Consumer Items (Jan 2018 to Dec 2022)')\n```\n\n::: {.cell-output-display}\n![](In-class_Ex06_Horizon_Plot_files/figure-html/unnamed-chunk-4-1.png){width=1152}\n:::\n:::\n\n\nAlternative method to use for hands-on Ex6:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nattacks <- attacks %>%\n  mutate(wkday = lubridate::wday(timestamp,\n                                 label = TRUE,\n                                 abbr = FALSE),\n         hour = lubridate::hour(timestamp))\n```\n:::",
    "supporting": [
      "In-class_Ex06_Horizon_Plot_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}